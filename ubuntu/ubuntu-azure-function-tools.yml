# This pipeline is for CI/CD
parameters:
- name: agentType
  displayName: Agent Type
  type: string
  default: Azure Pipelines
  values:
  - Azure Pipelines
  - Container Job
  - Managed DevOps Pool
  - All
- name: mdpName
  displayName: Managed DevOps Pool Name
  type: string
  default: Specify MDP Pool
# - name: mdpImageLabel
#   displayName: Managed DevOps Pool Image
#   type: string
#   default: ubuntu-20.04
- name: containerImage
  displayName: Container image
  type: string
  default: mcr.microsoft.com/azure-functions/python:4-python3.11-core-tools
- name: pythonVersion
  displayName: Python Version
  type: string
  default: 3.11
# - name: funcToolsVersion
#   displayName: Azure Functions Core Tools Version
#   type: string
#   default: 4
  
trigger: none

variables:
  funcToolsVersion: '4'
  # containerImage: 'mcr.microsoft.com/azure-functions/python:${{ parameters.funcToolsVersion }}-python${{ parameters.pythonVersion }}-core-tools'
  containerImage: 'mcr.microsoft.com/azure-functions/python:4-python${{ parameters.pythonVersion }}-core-tools'

jobs:
- ${{ if or(eq(parameters.agentType, 'Azure Pipelines'),eq(parameters.agentType, 'All')) }}:
  - job: hosted
    displayName: Use Azure Pipelines ubuntu-20.04 image
    pool:
      name: 'Azure Pipelines'
      vmImage: 'ubuntu-20.04'
    steps:
    # - bash: npm i -g azure-functions-core-tools@4 --unsafe-perm true
    #   displayName: 'Install Azure Functions Core Tools'
    - task: FuncToolsInstaller@0
      displayName: 'Install Azure Functions Core Tools'
      inputs:
        version: 'latest'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '${{ parameters.pythonVersion }}'
      displayName: 'Use Python ${{ parameters.pythonVersion }}'
    - bash: |
        func --version
        python -V
      displayName: 'Use Azure Functions Core Tools'

- ${{ if or(eq(parameters.agentType, 'Managed DevOps Pool'),eq(parameters.agentType, 'All')) }}:
  - job: mdp
    # displayName: Use Managed DevOps Pool ${{ parameters.mdpImageLabel }} image
    displayName: Use Managed DevOps Pool image
    pool:
      name: '${{ parameters.mdpName }}'
      # demands:
      # - ImageOverride -equals ${{ parameters.mdpImageLabel }}
    steps:
    # - bash: |
    #     wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb
    #     sudo dpkg -i packages-microsoft-prod.deb  
    #     # sudo add-apt-repository ppa:deadsnakes/ppa
    #     sudo apt update
    #     sudo apt -y install azure-functions-core-tools-4 # python${{ parameters.pythonVersion }}
    #   displayName: 'Install Azure Functions Core Tools'
    - bash: |
        sudo apt update
        sudo apt -y install unzip
      displayName: 'Install Pre-Requisites'
    - task: FuncToolsInstaller@0
      displayName: 'Install Azure Functions Core Tools'
      inputs:
        version: 'latest'
    - bash: |
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt update
        sudo apt -y install python${{ parameters.pythonVersion }}
        echo Python is in $PYTHONPATH
        echo ##vso[task.prependpath]$PYTHONPATH
      displayName: 'Install Python ${{ parameters.pythonVersion }}'
    - bash: |
        func --version
        python -V
      displayName: 'Use Azure Functions Core Tools'

- ${{ if or(eq(parameters.agentType, 'Container Job'),eq(parameters.agentType, 'All')) }}:
  - job: hostedContainer
    container: $(containerImage)
    displayName: Use $(containerImage) container image
    pool:
      name: 'Azure Pipelines'
      vmImage: 'ubuntu-latest'
    steps:
    - bash: |
        func --version
        python -V
      displayName: 'Use Azure Functions Core Tools'
