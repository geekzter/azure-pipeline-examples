# This pipeline is for CI/CD
parameters:
- name: agentType
  displayName: Agent Type
  type: string
  default: Azure Pipelines
  values:
  - Azure Pipelines
  - Container Job
  - Managed DevOps Pool
  - All
- name: hostedImageLabel
  displayName: Microsoft-hosted Image
  type: string
  default: ubuntu-20.04
- name: mdpName
  displayName: Managed DevOps Pool Name
  type: string
  default: Specify MDP Pool
- name: mdpImageLabel
  displayName: Managed DevOps Pool Image
  type: string
  default: ubuntu-20.04
- name: containerImage
  displayName: Container image
  type: string
  default: mcr.microsoft.com/azure-functions/python:4-python3.11-core-tools
- name: pythonVersion
  displayName: Python Version
  type: string
  default: 3.11
  
trigger: none

jobs:
- ${{ if or(eq(parameters.agentType, 'Azure Pipelines'),eq(parameters.agentType, 'All')) }}:
  - job: hosted
    displayName: Use Azure Pipelines ${{ parameters.hostedImageLabel }} image
    pool:
      name: 'Azure Pipelines'
      vmImage: '${{ parameters.hostedImageLabel }}'
    steps:
    - task: FuncToolsInstaller@0
      displayName: 'Install Azure Functions Core Tools'
      inputs:
        version: 'latest'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '${{ parameters.pythonVersion }}'
      displayName: 'Use Python ${{ parameters.pythonVersion }}'
    - bash: |
        func --version
        python --version
      displayName: 'Use Azure Functions Core Tools'

- ${{ if or(eq(parameters.agentType, 'Managed DevOps Pool'),eq(parameters.agentType, 'All')) }}:
  - job: mdp
    displayName: Use Managed DevOps Pool ${{ parameters.mdpImageLabel }} image
    pool:
      name: '${{ parameters.mdpName }}'
      demands:
      - ImageOverride -equals ${{ parameters.mdpImageLabel }}
    steps:
    - bash: |
        sudo apt -y install unzip
      displayName: 'Install Pre-Requisites'
    - task: FuncToolsInstaller@0
      displayName: 'Install Azure Functions Core Tools'
      inputs:
        version: 'latest'
    - bash: |
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt update
        sudo apt -y install python${{ parameters.pythonVersion }} # python-is-python3
        sudo update-alternatives --install /usr/local/bin/python3 python3 /usr/bin/python${{ parameters.pythonVersion }} 3
        sudo update-alternatives --install /usr/local/bin/python python /usr/bin/python${{ parameters.pythonVersion }} 3
        sudo update-alternatives --config python
        echo $(which python${{ parameters.pythonVersion }}) $(python${{ parameters.pythonVersion }} --version)
        echo $(which python3) $(python3 --version)
        echo $(which python) $(python --version)
      displayName: 'Install Python ${{ parameters.pythonVersion }}'
    - bash: |
        func --version
        python --version
      displayName: 'Use Azure Functions Core Tools'

- ${{ if or(eq(parameters.agentType, 'Container Job'),eq(parameters.agentType, 'All')) }}:
  - job: hostedContainer
    container: ${{ parameters.containerImage }}
    displayName: Use ${{ parameters.containerImage }} container image
    pool:
      name: 'Azure Pipelines'
      vmImage: 'ubuntu-latest'
    steps:
    - bash: |
        func --version
        python --version
      displayName: 'Use Azure Functions Core Tools'
