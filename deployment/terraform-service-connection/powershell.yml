parameters:
- name: pool
  displayName: Agent Pool
  type: string
  default: Azure Pipelines
- name: serviceConnection
  displayName: Azure Service Connection Name
  type: string
  default: my-azure-subscription
- name: azLogout
  displayName: Logout from Azure CLI
  type: boolean
  default: true

name: $(Date:yyyyMMdd)$(Rev:.r)-$(Build.DefinitionVersion)-$(SourceBranchName)-${{ parameters.serviceConnection }}-$(Build.BuildId)

trigger: none
schedules:
- cron: '0 1 * * *'
  displayName: 'Nightly build (UTC)'
  always: 'true'
  branches:
    include:
    - main

resources:
  repositories:
  - repository: azure-identity-scripts
    type: github
    endpoint: github.com # Service Connection name
    name: geekzter/azure-identity-scripts

variables:
  sampleRepository: $(Build.SourcesDirectory)/azure-pipeline-examples
  identityRepository: $(Build.SourcesDirectory)/azure-identity-scripts
  identityScriptDirectory: $(identityRepository)/scripts/azure-devops
  terraformDirectory: $(sampleRepository)/deployment/terraform-service-connection

jobs:
- job: terraformSingleStep
  displayName: 'Same step Azure CLI & Terraform'
  pool:
    name: ${{ parameters.pool }}
    vmImage: 'ubuntu-latest'
  steps:
    - checkout: self
    - checkout: azure-identity-scripts
    - task: AzureCLI@2
      name: azureCLI
      displayName: 'Terraform with Azure CLI task'
      inputs:
        azureSubscription: '${{ parameters.serviceConnection }}'
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          $(identityScriptDirectory)/set_terraform_azurerm_vars.ps1 -Token $(System.AccessToken)

          # Logging out from Azure CLI
          if ($${{ parameters.azLogout }}) {
            az logout
            Write-Host "`nLogged out from Azure CLI"
          }

          # Run Terraform within task
          terraform init
          terraform apply -auto-approve          
        useGlobalConfig: true
        addSpnToEnvironment: true
        failOnStandardError: true
        workingDirectory: $(terraformDirectory)
