parameters:
- name: serviceConnection
  displayName: Azure Service Connection Name
  type: string
  default: my-azure-subscription

name: $(Date:yyyyMMdd)$(Rev:.r)-$(Build.DefinitionVersion)-$(SourceBranchName)-$(Build.BuildId)

trigger: none
schedules:
- cron: '0 1 * * *'
  displayName: 'Nightly build (UTC)'
  always: 'true'
  branches:
    include:
    - main

jobs:
- job: terraformSingleStep
  displayName: 'Same step Azure CLI & Terraform'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - task: TerraformInstaller@0
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'
    - task: AzureCLI@2
      displayName: 'Terraform with Azure CLI task'
      inputs:
        azureSubscription: '${{ parameters.serviceConnection }}'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          # Inherit Azure CLI service connection
          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_CLIENT_SECRET=$servicePrincipalKey # requires addSpnToEnvironment: true
          export ARM_OIDC_TOKEN=$idToken                # requires addSpnToEnvironment: true
          export ARM_TENANT_ID=$tenantId
          export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          export ARM_USE_CLI=false
          [ ! -z "$ARM_OIDC_TOKEN" ] && export ARM_USE_OIDC=true
          env | grep "^ARM_" # SPN values will be masked

          terraform init

          # Processing test files
          for f in ./*.tftest.hcl; do 
            echo "Processing $f file..."
            if [ ! -z "$ARM_OIDC_TOKEN" ]; then
              # Renew idToken
              SERVICE_CONNECTION_ID=$(env | grep ENDPOINT_DATA_ | head -n 1 | cut -b 15-50)
              OIDC_REQUEST_URL="$(System.TeamFoundationCollectionUri)$(System.TeamProjectId)/_apis/distributedtask/hubs/build/plans/$(System.PlanId)/jobs/$(System.JobId)/oidctoken?api-version=7.1-preview.1&serviceConnectionId=${SERVICE_CONNECTION_ID}"
              ARM_OIDC_TOKEN=$(curl -s -H "Content-Length: 0" -H "Content-Type: application/json" -H "Authorization: Bearer $(System.AccessToken)" -X POST $OIDC_REQUEST_URL | jq -r '.oidcToken')
            fi
            terraform test -verbose -filter="$f"
          done
          
          # terraform test -verbose -filter='test.tftest.hcl'

          # if [ ! -z "$ARM_OIDC_TOKEN" ]; then
          #   # Renew idToken
          #   SERVICE_CONNECTION_ID=$(env | grep ENDPOINT_DATA_ | head -n 1 | cut -b 15-50)
          #   OIDC_REQUEST_URL="$(System.TeamFoundationCollectionUri)$(System.TeamProjectId)/_apis/distributedtask/hubs/build/plans/$(System.PlanId)/jobs/$(System.JobId)/oidctoken?api-version=7.1-preview.1&serviceConnectionId=${SERVICE_CONNECTION_ID}"
          #   ARM_OIDC_TOKEN=$(curl -s -H "Content-Length: 0" -H "Content-Type: application/json" -H "Authorization: Bearer $(System.AccessToken)" -X POST $OIDC_REQUEST_URL | jq -r '.oidcToken')
          # fi

          # terraform test -verbose -filter='test2.tftest.hcl'
        addSpnToEnvironment: true
        useGlobalConfig: true
        failOnStandardError: true
        workingDirectory: '$(Build.SourcesDirectory)/deployment/terraform-service-connection'
