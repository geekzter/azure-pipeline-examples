# Pipeline to test Service Connections

parameters:
- name: serviceConnection
  displayName: Override Service Connection
  type: string
  default: '<from subscriptionConnection variable>'
- name: jobType
  displayName: Job type
  type: string
  default: agentJob
  values:
  - agentJob
  - containerJob
  - deploymentJob
  - environmentVM
- name: poolName
  displayName: Agent Pool
  type: string
  default: 'Azure Pipelines'
- name: vmImage
  displayName: Agent Pool
  type: string
  default: 'ubuntu-latest'
- name: environmentName
  displayName: Environment
  type: string
  default: 'scratch'
- name: additionalVariableGroup
  displayName: Variable Group (Key Vault test)
  type: string
  default: 'empty'


name: $(Date:yyyyMMdd)$(Rev:.r)-$(Build.DefinitionVersion)-${{ parameters.jobType }}-$(SourceBranchName)-$(Build.BuildId)

schedules:
- cron: '0 1 * * *'
  displayName: 'Nightly build (UTC)'
  always: 'true'
  branches:
    include:
    - main
trigger: none

variables:
- group: 'container-images'
- ${{ if ne(parameters.additionalVariableGroup,'empty') }}:
  - group: '${{ parameters.additionalVariableGroup }}'
- name: serviceConnection
  ${{ if eq(parameters.serviceConnection, '<from subscriptionConnection variable>') }}:
    value: $[ variables['subscriptionConnection'] ]
  ${{ else }}:
    value: '${{ parameters.serviceConnection }}'

jobs:
- ${{ if or(eq(parameters.jobType,'deploymentJob'),eq(parameters.jobType,'environmentVM')) }}:
  - deployment: useServiceConnection
    ${{ if eq(parameters.jobType,'deploymentJob') }}:
      displayName: 'Deployment job'
      environment: 
        name: ${{ parameters.environmentName }}
    ${{ else }}:
      displayName: 'Environment VM'
      environment: 
        name: ${{ parameters.environmentName }}
        resourceType: virtualMachine
    strategy:
      runOnce:
        deploy:
          steps:
          - template: azure-service-connection-info-tasks.yml

- ${{ else }}:
  - job: useServiceConnection
    ${{ if eq(parameters.jobType,'containerJob') }}:
      container:
        image: $(containerRegistryFQDN)/$(containerImage)
        endpoint: containerEndpoint
      displayName: 'Container job'
    ${{ else }}:
      displayName: 'Agent job'
      pool:
        name: ${{ parameters.poolName }}
        vmImage: ${{ parameters.vmImage }}
      steps:
      - template: azure-service-connection-info-tasks.yml
