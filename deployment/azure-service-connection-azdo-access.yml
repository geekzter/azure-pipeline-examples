trigger: none
schedules:
- cron: '0 1 * * *'
  displayName: 'Nightly build (UTC)'
  always: 'true'
  branches:
    include:
    - main

jobs:
- job: agent
  displayName: 'Use Azure Service Connection'
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: AzureCLI@2
    displayName: 'Get AAD token to access Azure DevOps'
    inputs:
      azureSubscription: '$(subscriptionConnection)'
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        Write-Host "Obtaining access token for Service Connection identity..."
        az account get-access-token --resource 499b84ac-1321-427f-aa17-267ca6975798 `
                            --query "accessToken" `
                            --output tsv `
                            | Set-Variable aadToken
        Write-Host "Access token for Service Connection identity: " -NoNewline
        $aadToken -replace '.','*' # Mask token

        Write-Host "`nConfigure Azure DevOps CLI (az devops) to use the token..."
        $env:AZURE_DEVOPS_EXT_PAT = $aadToken
        az devops configure --defaults organization=$(System.CollectionUri) project=$(System.TeamProject)
        az devops configure -l
        Write-Host "`nUse token with Azure DevOps CLI (az devops) to list projects in the organization '$(System.CollectionUri)'..."
        az devops project list --query "value[].{Name:name, Id:id}" -o table
        Write-Host "`nUse token with Azure DevOps CLI (az pipelines) to list pools in the organization '$(System.CollectionUri)'..."
        az pipelines pool list --query "[].{Id:id, Name:name}" -o table

        Write-Host "`nUse token with Azure DevOps REST API to list pools in the organization '$(System.CollectionUri)'..."
        $apiVersion = "7.1-preview.1"
        $apiUrl = "$(System.CollectionUri)/_apis/distributedtask/pools?api-version=${apiVersion}"
        $requestHeaders = @{
            Accept = "application/json"
            Authorization = "Bearer $aadToken"
            "Content-Type" = "application/json"
        }
        Invoke-RestMethod -Uri $apiUrl -Headers $requestHeaders -Method Get | Select-Object -ExpandProperty value `
                                                                            | Select-Object id, name
      failOnStandardError: true
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
